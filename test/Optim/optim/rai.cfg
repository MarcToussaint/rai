# MPS_gradientDescent, MPS_rprop, MPS_LBFGS, MPS_newton,
# MPS_augmentedLag, MPS_squaredPenalty, MPS_logBarrier, MPS_singleSquaredPenalty,
# MPS_NLopt, MPS_Ipopt, MPS_Ceres

#solver: GradientDescent
#solver: Newton
#solver: Rprop
solver: LBFGS
#solver: LogBarrier
#solver: SquaredPenalty
#solver: AugmentedLag
#solver: NLopt

opt/verbose:     3
opt/stopTolerance:  1e-4
#opt/stopFTolerance:   -1
#opt/stopGTolerance:   -1
opt/stopEvals:  1000
#opt/stepMax:   .1
#opt/damping:     1e1
#opt/muInit: 1e3
#opt/muLBInit: 1.
#opt/muInc: 2.
opt/stepInc:   2.
opt/stepDec:   0.3
#opt/initStep:  1.5
#opt/wolfe:  -1. #0.01
#opt/initStep: 1.
#opt/stepInc: .9
#opt/allowOverstep: true

#opt/dampingInc: 1e1
#opt/dampingDec: 1e-1


#benchmark: Square
benchmark: Rosenbrock
#benchmark: Rastrigin
#benchmark: RandomSquared
#benchmark: RandomLP
#benchmark: RastriginSOS
#benchmark: Wedge,
;benchmark: HalfCircle,
#benchmark: CircleLine,

benchmark/forsyth: -2.1
benchmark/condition: 20.

benchmark/bounds: [-2, -2, 2, 2]

Rastrigin/a: 4.

x_init: [.2, .0]
x_init: [-1., .1]
