QUIT
WAIT
ANY
Terminate

FOL_World{
  hasWait=false
  gamma = 1.
  stepCost = 1.
  timeCost = 0.
}

## basic predicates
is_gripper
is_object
is_place
is_pose
is_box
is_sphere
is_capsule

## predicates to help formulating rules
on
busy
movable


## predicates to help prune tree
INFEASIBLE
INFEASIBLE_pick

## skeleton symbols
above
touch
impulse
restingOn
poseEq
push_
stable
stableOn
quasiStaticOn
dynamic
dynamicOn
liftDownUp

## initial state (generated by the code)
START_STATE {}

### RULES

#####################################################################

### Reward
REWARD {
}

#####################################################################

DecisionRule pick_touch {
  Obj, From, Hand, 
  { (is_gripper Hand) (is_object Obj) (on From Obj) (is_place From) (busy Hand)! }
  { (on From Obj)! (above Obj From)! (touch Obj From)! (stable From Obj)! (stableOn From Obj)!  #deletes
    (on Hand Obj) (busy Hand) (movable Obj)  #logic
    (touch Hand Obj) (stable Hand Obj)  #geometric
    }
}

#####################################################################

DecisionRule place_straightOn {
  Obj, Hand, To,
  { (is_gripper Hand) (is_object Obj) (on Hand Obj) (is_place To) (busy Obj)! }
  { (busy Hand)! (on Hand Obj)! (stable Hand Obj)! (touch Hand Obj)! (movable Obj)!  #deletes
    (on To Obj)  #logic
    (stableOn To Obj)  #geometric
    }
}

#####################################################################

DecisionRule handover {
  Obj, Hand, To,
  { (is_gripper Hand) (is_object Obj) (on Hand Obj) (is_gripper To) (busy Obj)! (busy To)! }
  { (busy Hand)! (on Hand Obj)! (stable Hand Obj)! (touch Hand Obj)!  #deletes
    (on To Obj) (busy To) #logic
    (touch To Obj) (stable To Obj)  #geometric
    }
}

#####################################################################

DecisionRule poseEq {
  Obj, To,
  { (movable Obj) (is_pose To) }
  { #deletes
    #logic
    (poseEq To Obj)  #geometric
    }
}

#####################################################################

Rule chainMovables {
  Obj1, Obj2,
  { (is_object Obj1) (is_object Obj2) (on Obj1 Obj2) (movable Obj1) }
  { (movable Obj2) }
}
